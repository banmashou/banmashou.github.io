(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{508:function(t,e,s){"use strict";s.r(e);var n=s(13),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"自动引入api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动引入api"}},[t._v("#")]),t._v(" 自动引入Api")]),t._v(" "),e("p",[t._v("使用 "),e("a",{attrs:{href:"https://github.com/antfu/unplugin-auto-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("unplugin-auto-import"),e("OutboundLink")],1),t._v("可以自动导入api，不需要import。")]),t._v(" "),e("p",[t._v("没有使用时")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { ref, computed } from 'vue'\nconst count = ref(0)\nconst doubled = computed(() => count.value * 2)\n")])])]),e("p",[t._v("使用插件后")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const count = ref(0)\nconst doubled = computed(() => count.value * 2)\n")])])]),e("h3",{attrs:{id:"安装扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装扩展"}},[t._v("#")]),t._v(" 安装扩展")]),t._v(" "),e("p",[t._v("首先安装扩展包")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("yarn add -D unplugin-auto-import\n")])])]),e("h3",{attrs:{id:"vite-config-ts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-config-ts"}},[t._v("#")]),t._v(" vite.config.ts")]),t._v(" "),e("p",[t._v("下面是修改vite.config.js配置文件，来增加对vue 与 vue-router的 api自动引用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\nimport AutoImport from 'unplugin-auto-import/vite'\n\nexport default defineConfig({\n  plugins: [\n    vue(),\n    AutoImport({\n      imports: ['vue', 'vue-router'],\n      //为true时在项目根目录自动创建\n      dts: 'types/auto-imports.d.ts',\n    }),\n  ]\n})\n")])])]),e("h3",{attrs:{id:"tsconfig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig"}},[t._v("#")]),t._v(" tsconfig")]),t._v(" "),e("p",[t._v("接下来在 tsconfig.json中引入生成的类型声明文件，当执行 yarn dev 时会根据上面定义的 dts选项自动生成类型声明文件 types/auto-imports.d.ts")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"include": [\n  ...\n  "types/**/*.ts"\n]\n')])])]),e("h3",{attrs:{id:"使用示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),e("p",[t._v("现在在vue组件与.ts文件中使用ref等vue的api，就不需要import了")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const user = ref('banmashou.com@斑马兽')\n")])])]),e("h3",{attrs:{id:"element-plus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#element-plus"}},[t._v("#")]),t._v(" element plus")]),t._v(" "),e("p",[t._v("Element plus与ant design也提示了针对该插件的支持，配置好后也不需要import api了。")]),t._v(" "),e("p",[t._v("下面是element plus的vite.config.ts的配置项")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { Plugin } from 'vite'\nimport AutoImport from 'unplugin-auto-import/vite'\nimport Components from 'unplugin-vue-components/vite'\nimport { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n\nexport default function (plugins: Plugin[]) {\n  plugins.push(\n    AutoImport({\n    \t//引入element plus自动api支持\n      resolvers: [ElementPlusResolver()],\n      imports: ['vue', 'vue-router'],\n      //为true时在项目根目录自动创建\n      dts: 'types/auto-imports.d.ts',\n    })\n  )\n}\n")])])]),e("p",[t._v("现在我们可以直接使用 element plus 的api，而不需要import进来再使用了")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ElMessage.success('banmashou.com')\n")])])]),e("p",[t._v("不过有些依赖的css会识别不到造成样式错误，建议在index.html 项目模板中引入样式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<link rel="stylesheet" href="//unpkg.com/element-plus/dist/index.css" />\n')])])]),e("h2",{attrs:{id:"自动加载组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动加载组件"}},[t._v("#")]),t._v(" 自动加载组件")]),t._v(" "),e("p",[t._v("使用 "),e("a",{attrs:{href:"https://github.com/antfu/unplugin-vue-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("unplugin-vue-components"),e("OutboundLink")],1),t._v("可以自动按需要加载组件，我们常用的 ant design 、element plus已经基于该插件实现了按需加载。")]),t._v(" "),e("h3",{attrs:{id:"安装配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装配置"}},[t._v("#")]),t._v(" 安装配置")]),t._v(" "),e("p",[t._v("下面我们通过配置 "),e("a",{attrs:{href:"https://github.com/antfu/unplugin-vue-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("unplugin-vue-components"),e("OutboundLink")],1),t._v("插件来实现自动 import 组件，节省我们import的代码")]),t._v(" "),e("h3",{attrs:{id:"安装插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装插件"}},[t._v("#")]),t._v(" 安装插件")]),t._v(" "),e("p",[t._v("首先安装需要的扩展包")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("yarn add -D unplugin-vue-components\n")])])]),e("h3",{attrs:{id:"vite-config-ts-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-config-ts-2"}},[t._v("#")]),t._v(" vite.config.ts")]),t._v(" "),e("p",[t._v("下面在vite中配置组件的按需自动加载")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\nimport Components from 'unplugin-vue-components/vite'\n\nexport default defineConfig({\n  plugins: [\n    vue(),\n    Components({\n    \t//自动加载的组件目录，默认值为 ['src/components']\n      dirs: ['src/components'],\n      //组件名称包含目录，防止同名组件冲突\n      directoryAsNamespace: true,\n      //指定类型声明文件，为true时在项目根目录创建\n      dts: 'types/components.d.ts',\n    })\n  ]\n})\n")])])]),e("h3",{attrs:{id:"tsconfig-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[t._v("#")]),t._v(" tsconfig.json")]),t._v(" "),e("p",[t._v("接下来在 tsconfig.json中引入生成的类型声明文件，当执行 yarn dev 时会根据上面定义的 dts选项自动生成类型声明文件 types/components.d.ts")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"include": [\n  ...\n  "types/**/*.ts"\n]\n')])])]),e("h3",{attrs:{id:"组件重名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件重名"}},[t._v("#")]),t._v(" 组件重名")]),t._v(" "),e("p",[t._v("插件的默认配置会加载components目录中的组件，所以当存在相同名称的组件user.vue时，会报下面的错误")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('[unplugin-vue-components] component "User"(xxxxx/user.vue) has naming conflicts with other components, ignored.\n')])])]),e("p",[t._v("我们可以声明组件的注册名称包含目录，这样组件包含目录前缀来避免组件重名")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Components({\n  resolvers: [ElementPlusResolver()],\n  directoryAsNamespace: true,\n  dts: true,\n})\n")])])]),e("h3",{attrs:{id:"使用示例-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-2"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),e("p",[t._v("运行 yarn dev 命令后，我们现在可以在组件中直接使用 src/components中的组件，而不需要import引入组件了。")]),t._v(" "),e("p",[t._v("因为定义了 "),e("code",[t._v("directoryAsNamespace")]),t._v(" 选项，所以实际使用的组件名称前要加上目录名，vscode也会自动根据TS类型进行提示的")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<WangEditorEditor/>\n")])])]),e("h3",{attrs:{id:"element-plus-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#element-plus-2"}},[t._v("#")]),t._v(" element plus")]),t._v(" "),e("p",[t._v("Element plus与ant design也提示了针对该插件的支持，配置好后也不需要import 组件了。")]),t._v(" "),e("p",[t._v("下面是element plus的vite.config.ts的配置项")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { Plugin } from 'vite'\nimport AutoImport from 'unplugin-auto-import/vite'\nimport Components from 'unplugin-vue-components/vite'\nimport { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n\nexport default function (plugins: Plugin[]) {\n  plugins.push(\n    Components({\n      dirs: ['src/components'],\n      directoryAsNamespace: true,\n      //为true时在项目根目录自动创建\n      dts: 'types/components.d.ts',\n      //引入element plus自动组件支持\n      resolvers: [ElementPlusResolver()],\n    })\n  )\n}\n")])])]),e("p",[t._v("现在我们可以直接使用 element plus 的组件了，而不需要import进来再使用了")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<el-button type="primary" size="default">houdunren.com</el-button>\n')])])]),e("p",[t._v("有些依赖的css会识别不到造成样式错误，建议在index.html 项目模板中引入样式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<link rel="stylesheet" href="//unpkg.com/element-plus/dist/index.css" />\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);