(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{505:function(v,s,_){"use strict";_.r(s);var t=_(13),a=Object(t.a)({},(function(){var v=this,s=v._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h2",{attrs:{id:"有哪项方式可以对一个-dom-设置它的-css-样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪项方式可以对一个-dom-设置它的-css-样式"}},[v._v("#")]),v._v(" 有哪项方式可以对一个 DOM 设置它的 CSS 样式")]),v._v(" "),s("p",[v._v("外部样式表，引入一个外部 css 文件")]),v._v(" "),s("p",[v._v("内部样式表，将 css 代码放在 "),s("code",[v._v("<head>")]),v._v(" 标签内部")]),v._v(" "),s("p",[v._v("内联样式，将 css 样式直接定义在 HTML 元素内部")]),v._v(" "),s("h2",{attrs:{id:"css-都有哪些选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-都有哪些选择器"}},[v._v("#")]),v._v(" CSS 都有哪些选择器")]),v._v(" "),s("p",[v._v("标签选择器（用 HTML 标签申明）")]),v._v(" "),s("p",[v._v("id 选择器（用 DOM 的 ID 申明）")]),v._v(" "),s("p",[v._v("类选择器（用一个样式类名申明）")]),v._v(" "),s("p",[v._v("属性选择器（用 DOM 的属性申明，属于 CSS2，IE6 不支持，不常用，不知道就算了）")]),v._v(" "),s("p",[v._v("除了前 3 种基本选择器，还有一些扩展选择器，包括")]),v._v(" "),s("p",[v._v("后代选择器（利用空格间隔，比如 div .a{ }）")]),v._v(" "),s("p",[v._v("群组选择器（利用逗号间隔，比如 p,div,#a{")]),v._v(" "),s("p",[v._v("CSS 中可以通过哪些属性定义，使得一个 DOM 元素不显示在浏览器可视范围\n内？")]),v._v(" "),s("h2",{attrs:{id:"css-中可以通过哪些属性定义-使得一个-dom-元素不显示在浏览器可视范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中可以通过哪些属性定义-使得一个-dom-元素不显示在浏览器可视范围"}},[v._v("#")]),v._v(" CSS 中可以通过哪些属性定义，使得一个 DOM 元素不显示在浏览器可视范围")]),v._v(" "),s("p",[v._v("设置 display 属性为 none，或者设置 visibility 属性为 hidden")]),v._v(" "),s("h2",{attrs:{id:"display-none-与-visibility-hidden-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-none-与-visibility-hidden-的区别是什么"}},[v._v("#")]),v._v(" display:none 与 visibility:hidden 的区别是什么？")]),v._v(" "),s("p",[v._v("display : 隐藏对应的元素但不挤占该元素原来的空间。")]),v._v(" "),s("p",[v._v("visibility: 隐藏对应的元素并且挤占该元素原来的空间。")]),v._v(" "),s("p",[v._v("即是，使用 CSS display:none 属性后，HTML 元素（对象）的宽度、高度等各种属性值都将\n“丢失”;而使用 visibility:hidden 属性后，HTML 元素（对象）仅仅是在视觉上看不见（完全透明），而它所占据的空间位置仍然存在。")]),v._v(" "),s("h2",{attrs:{id:"css-中-link-和-import-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中-link-和-import-的区别"}},[v._v("#")]),v._v(" CSS 中 link 和@import 的区别")]),v._v(" "),s("p",[v._v("Link 属于 html 标签，而@import 是 CSS 中提供的")]),v._v(" "),s("p",[v._v("在页面加载的时候，link 会同时被加载，而@import 引用的 CSS 会在页面加载完成后才会加\n载引用的 CSS")]),v._v(" "),s("p",[v._v("@import 只有在 ie5 以上才可以被识别，而 link 是 html 标签，不存在浏览器兼容性问题")]),v._v(" "),s("p",[v._v("Link 引入样式的权重大于@import 的引用（@import 是将引用的样式导入到当前的页面中）")]),v._v(" "),s("h2",{attrs:{id:"简介盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介盒子模型"}},[v._v("#")]),v._v(" 简介盒子模型")]),v._v(" "),s("p",[v._v("两种， IE 盒子模型、标准 W3C 盒子模型；IE 的 content 部分包含了 border 和\npading;")]),v._v(" "),s("p",[v._v("盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)")]),v._v(" "),s("h2",{attrs:{id:"bfc-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfc-是什么"}},[v._v("#")]),v._v(" BFC 是什么")]),v._v(" "),s("p",[v._v("BFC（块级格式化上下文），一个创建了新的 BFC 的盒子是独立布局的，盒子内元素的布局\n不会影响盒子外面的元素。在同一个 BFC 中的两个相邻的盒子在垂直方向发生 margin 重叠\n的问题")]),v._v(" "),s("p",[v._v("BFC 是指浏览器中创建了一个独立的渲染区域，该区域内所有元素的布局不会影响到区域外")]),v._v(" "),s("h2",{attrs:{id:"css-优先级算法如何计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-优先级算法如何计算"}},[v._v("#")]),v._v(" css 优先级算法如何计算")]),v._v(" "),s("p",[v._v("!important > id > class > 标签")]),v._v(" "),s("p",[v._v("!important 比 内联优先级高")]),v._v(" "),s("p",[v._v("优先级就近原则，样式定义最近者为准;以最后载入的样式为准;")]),v._v(" "),s("h2",{attrs:{id:"对-web-标准以及-w3c-的理解与认识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-web-标准以及-w3c-的理解与认识"}},[v._v("#")]),v._v(" 对 WEB 标准以及 W3C 的理解与认识")]),v._v(" "),s("p",[v._v("标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 链 css 和 js 脚本、结\n构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广\n泛的设备所访问、更少的代码和组件，容易维 护、改版方便，不需要变动页面内容、提供\n打印版本而不需要复制内容、提高网站易用性")]),v._v(" "),s("h2",{attrs:{id:"sass、less-是什么-大家为什么要使用他们"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sass、less-是什么-大家为什么要使用他们"}},[v._v("#")]),v._v(" Sass、Less 是什么？大家为什么要使用他们")]),v._v(" "),s("p",[v._v("他们是 CSS 预处理器。他是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成 CSS。")]),v._v(" "),s("p",[v._v("例如 Less 是一种动态样式语言. 将 CSS 赋予了动态语言的特性，如变量，继承，运算， 函\n数. LESS 既可以在客户端上运行 (支持 IE 6+, Webkit, Firefox)，也可一在服务端运行 (借助 Node.js)。")]),v._v(" "),s("p",[v._v("为什么要使用它们？")]),v._v(" "),s("p",[v._v("结构清晰，便于扩展。")]),v._v(" "),s("p",[v._v("可以轻松实现多重继承。")]),v._v(" "),s("p",[v._v("可以方便地屏蔽浏览器私有语法差异。这个不用多说，封装对浏览器语法差异的重复处理，减少无意义的机械劳动。")]),v._v(" "),s("p",[v._v("完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译。")]),v._v(" "),s("h2",{attrs:{id:"说说em-px-rem-vh-vw区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说说em-px-rem-vh-vw区别"}},[v._v("#")]),v._v(" 说说em/px/rem/vh/vw区别")]),v._v(" "),s("p",[s("strong",[v._v("px")]),v._v("：绝对单位，页面按精确像素展示")]),v._v(" "),s("p",[s("strong",[v._v("em")]),v._v("：相对单位，基准点为父节点字体的大小，如果自身定义了"),s("code",[v._v("font-size")]),v._v("按自身来计算，整个页面内"),s("code",[v._v("1em")]),v._v("不是一个固定的值")]),v._v(" "),s("p",[s("strong",[v._v("rem")]),v._v("：相对单位，可理解为"),s("code",[v._v("root em")]),v._v(", 相对根节点"),s("code",[v._v("html")]),v._v("的字体大小来计算")]),v._v(" "),s("p",[s("strong",[v._v("vh、vw")]),v._v("：主要用于页面视口大小布局，在页面布局上更加方便简单")])])}),[],!1,null,null,null);s.default=a.exports}}]);