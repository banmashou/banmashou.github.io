(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{514:function(a,t,e){"use strict";e.r(t);var s=e(13),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"项目创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目创建"}},[a._v("#")]),a._v(" 项目创建")]),a._v(" "),t("h3",{attrs:{id:"软件安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件安装"}},[a._v("#")]),a._v(" 软件安装")]),a._v(" "),t("p",[t("strong",[a._v("NODE")])]),a._v(" "),t("p",[a._v("请先访问 https://nodejs.org/zh-cn/安装NODE（安装LTS版本即可）")]),a._v(" "),t("h4",{attrs:{id:"淘宝镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#淘宝镜像"}},[a._v("#")]),a._v(" 淘宝镜像")]),a._v(" "),t("p",[a._v("使用"),t("a",{attrs:{href:"https://developer.aliyun.com/mirror/NPM?from=tnpm",target:"_blank",rel:"noopener noreferrer"}},[a._v("淘宝镜像"),t("OutboundLink")],1),a._v("(opens new window)可以快速安装NPM依赖包")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install -g cnpm --registry=https://registry.npm.taobao.org\n")])])]),t("p",[t("strong",[a._v("yarn")])]),a._v(" "),t("p",[a._v("Yarn 是与 npm 类似的包管理工具，Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。")]),a._v(" "),t("p",[a._v("安装 yarn")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install -g yarn\n")])])]),t("h3",{attrs:{id:"创建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建项目"}},[a._v("#")]),a._v(" 创建项目")]),a._v(" "),t("p",[a._v("vite")]),a._v(" "),t("p",[a._v("下面是使用 vite 构建基于 vue-ts 模板的项目 banmashou")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yarn create vite banmashou --template vue-ts\n")])])]),t("h2",{attrs:{id:"跨域请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域请求"}},[a._v("#")]),a._v(" 跨域请求")]),a._v(" "),t("p",[a._v("跨越请求的主要问题是携带 cookie，下面我们来解决 vue 的跨越请求问题。")]),a._v(" "),t("h3",{attrs:{id:"代理方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理方式"}},[a._v("#")]),a._v(" 代理方式")]),a._v(" "),t("p",[a._v("如果后台要使用"),t("code",[a._v("cookie")]),a._v("进行权限验证。这时就需要前台可以传递cookie，我们使用前台代理完成这个功能，使用这种方式后台不需要什么配置。")]),a._v(" "),t("h3",{attrs:{id:"axios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[a._v("#")]),a._v(" axios")]),a._v(" "),t("p",[a._v("请求一般使用axios 发送，下面是对 url 的基本配置")]),a._v(" "),t("blockquote",[t("p",[t("span",{staticStyle:{"font-size":"22px"}},[a._v("不需要设置 axios 的 withCredentials 属性为 true")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//请求拦截\ninstance.interceptors.request.use(\n  function (config) {\n  \t//如果请求不是以 / 开始时添加 /api 前缀\n    config.baseURL = config.url[0] == '/' ? '' : '/api'\n...    \n")])])]),t("h3",{attrs:{id:"vite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[a._v("#")]),a._v(" vite")]),a._v(" "),t("p",[a._v("下面是重点即在 vite.config.js 中配置代理，解决跨越的问题。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("export default defineConfig({\n  ...\n  //开发环境设置\n  server: {\n      proxy: {\n      \t//laravel 中获取 csrf-token 的接口\n        '/sanctum': {\n            //将/api访问转换为target\n            target: 'http://banmashou.test/sanctum',\n            changeOrigin: true,\n            rewrite: path => path.replace(/^\\/sanctum/, ''),\n          },\n         '/api': {\n              //将/api访问转换为target\n              target: 'http://banmashou.test/api',\n              //跨域请求携带cookie\n              changeOrigin: true,\n              //url 重写删除`/api`\n              rewrite: path => path.replace(/^\\/api/, ''),\n          },\n      },\n  },\n})\n")])])]),t("h3",{attrs:{id:"laravel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#laravel"}},[a._v("#")]),a._v(" laravel")]),a._v(" "),t("p",[a._v("因为上面是使用代理解决跨域问题，所以如果后台使用 laravel 不需要进行配置。下面对几个文件进行说明")]),a._v(" "),t("p",[t("strong",[a._v(".env")])]),a._v(" "),t("p",[a._v("修改 "),t("code",[a._v(".env")]),a._v(" 来对域名等进行配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("APP_URL=http://banmashou.test\n")])])]),t("h3",{attrs:{id:"csrf-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf-token"}},[a._v("#")]),a._v(" csrf-token")]),a._v(" "),t("p",[a._v("因为是使用 cookie 请求 laravel 所以后台会进行 csrf 验证，需要先获取 csrf-token 的 cookie。axios 等框架会自动携带这个 cookie 完成后台的 csrf 验证。")]),a._v(" "),t("p",[a._v("下面是登录操作的代码")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("...\nconst login = async () => {\n    axios.get('/sanctum/csrf-cookie').then(async response => {\n        await axios.login(form)\n        ...\n    })\n}\n...\n")])])]),t("p",[a._v("下面是 loginController 控制器文件，我们以 api/login 路由访问。需要使用 web 的 guard 完成session登录。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("...\nAuth::guard('web')->login($user);\n...\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);